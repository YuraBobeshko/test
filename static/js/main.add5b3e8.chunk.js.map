{"version":3,"sources":["components/Phrase/Phrase.js","components/validateField/validateField.js","components/FormAdd/FormAdd.js","components/ShowListUsers/ShowListUsers.js","components/Nav/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Phrase","props","state","phrase","bind","fetch","respons","json","this","setState","data","className","React","Component","validateField","value","setValid","getValid","valid","length","replace","name","secondName","sex","loyalty","card","Object","values","every","item","FormAdd","userList","JSON","parse","localStorage","getItem","id","formValid","setData","createNewUser","event","target","userListMut","alert","push","Date","toLocaleDateString","prevState","func","preventDefault","stateJson","stringify","setItem","idJson","action","placeholder","type","onChange","hidden","onClick","disabled","ShowListUsers","list","map","user","key","Nav","addUsers","to","exact","path","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.add5b3e8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Phrase extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      phrase: null\r\n    };\r\n    this.phrase = this.phrase.bind(this);\r\n  }\r\n  async phrase () {\r\n    const respons = await fetch('https://meowfacts.herokuapp.com/');\r\n    const phrase = await respons.json();\r\n    this.setState({phrase: phrase.data})\r\n  }\r\n  render(){\r\n    if (this.state.phrase === null) {\r\n      this.phrase();\r\n    }\r\n  return <p className={\"phrase\"}>{this.state.phrase}</p>;\r\n  }\r\n\r\n}\r\n\r\nexport default Phrase;","\r\nfunction validateField (value, data, setValid, getValid) {\r\n  const valid = getValid;\r\n    switch (data) {\r\n      case \"nameValid\":\r\n        if(value.length >= 2 && value.length <= 8 && (value.replace(/[а-я]/ig, \"\") === \"\")) {\r\n          valid.name = true;\r\n        } else {\r\n          valid.name = false;\r\n        }\r\n        break;\r\n      case \"secondNameValid\":\r\n        if(value.length >= 2 && value.length <= 14 && value.replace(/[а-я]/ig, \"\") === \"\") {\r\n          valid.secondName = true;\r\n        } else {\r\n          valid.secondName = false;\r\n        }\r\n        break;\r\n      case \"sexValid\":\r\n          if(value !== \"\") {\r\n            valid.sex = true;\r\n          } else {\r\n            valid.sex = false;\r\n          }\r\n        break;\r\n      case \"loyaltyValid\":\r\n          if(value !== \"\") {\r\n            valid.loyalty = true;\r\n          } else {\r\n            valid.loyalty = false;\r\n          }\r\n          if (value === \"card\") {\r\n            setValid({...valid, card: false}, false)\r\n            valid.card = false;\r\n          } else if (value !== \"card\") {\r\n            setValid({...valid, card: true}, false)\r\n            valid.card = true;\r\n          }\r\n        break;\r\n      case \"cardValid\":\r\n          if(value.length === 8 && value.replace(/\\d/ig, \"\") === \"\") {\r\n            valid.card = true;\r\n          } else {\r\n            valid.card = false;\r\n          }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    \r\n    setValid({...valid}, \r\n      Object.values(valid).every(item => item === true))\r\n}\r\n\r\nexport default validateField;","import React from 'react';\r\n\r\nimport Phrase from '../Phrase/Phrase';\r\nimport validateField from '../validateField/validateField';\r\n\r\nclass FormAdd extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userList: JSON.parse(localStorage.getItem(\"userList\")) || [],\r\n      name: \"\",\r\n      secondName: \"\",\r\n      sex: \"\",\r\n      loyalty: \"\",\r\n      card: \"\",\r\n      phrase: null,\r\n      id: JSON.parse(localStorage.getItem(\"id\")) || 0,\r\n      formValid: false,\r\n      valid: {\r\n        name: \"first\",\r\n        secondName: \"first\",\r\n        sex: \"first\",\r\n        loyalty: true,\r\n        card: true\r\n      }\r\n    };\r\n\r\n    this.setData = this.setData.bind(this);\r\n    this.createNewUser = this.createNewUser.bind(this);\r\n    this.setValid = this.setValid.bind(this);\r\n    }\r\n\r\n  setValid (valid, formValid) {\r\n    this.setState({ formValid, valid });\r\n  }\r\n\r\n  setData(event, data) {\r\n    const value = event.target.value;\r\n    switch (data) {\r\n      case \"name\":\r\n        this.setState({ name: value }, () => {\r\n          validateField(value, \"nameValid\", this.setValid, this.state.valid);\r\n        });\r\n        break;\r\n      case \"secondName\":\r\n        this.setState({ secondName: value }, () => {\r\n          validateField(\r\n            value,\r\n            \"secondNameValid\",\r\n            this.setValid,\r\n            this.state.valid\r\n          );\r\n        });\r\n        break;\r\n      case \"sex\":\r\n        this.setState({ sex: value }, () => {\r\n          validateField(\r\n            value, \r\n            \"sexValid\", \r\n            this.setValid, \r\n            this.state.valid\r\n          );\r\n        });\r\n        break;\r\n      case \"loyalty\":\r\n        this.setState({ loyalty: value }, () => {\r\n          validateField(\r\n            value, \r\n            \"loyaltyValid\", \r\n            this.setValid, \r\n            this.state.valid\r\n          );\r\n        });\r\n        break;\r\n      case \"card\":\r\n        this.setState({ card: value }, () => {\r\n          validateField(\r\n            value, \r\n            \"cardValid\", \r\n            this.setValid, \r\n            this.state.valid\r\n          );\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  createNewUser(event) {\r\n\r\n    let {userList, name, secondName, sex, loyalty, card, id} = this.state;\r\n    const userListMut =  [...userList];\r\n    alert(`пользователь ${name} ${secondName} ${id} \\nпол:${sex} П.Л. ${loyalty} создан`);\r\n\r\n    userListMut.push({\r\n      name: name, \r\n      secondName: secondName, \r\n      sex: sex, \r\n      loyalty: loyalty,\r\n      card: card === \"\" ? \"-\" : card, \r\n      data: new Date().toLocaleDateString(), \r\n      id: id,\r\n    })\r\n    this.setState(prevState => ({\r\n      userList: userListMut,\r\n      name: \"\",\r\n      secondName: \"\",\r\n      sex: \"\",\r\n      loyalty: \"\",\r\n      card: \"\",\r\n      id: prevState.id = prevState.id + 1,\r\n    }));\r\n    this.props.func(userListMut);\r\n    event.preventDefault();\r\n  }\r\n  \r\n  render() {\r\n    const {name, secondName, sex, card} = this.state.valid;\r\n    const noValidName = \"Имя должно содержать только кириллицу и быть больше 2 символов и меньше 9\";\r\n    const noValidSecondName = \"Фамилия должна содержать только кириллицу и быть больше 2 символов и меньше 15\";\r\n    const noValidSecondCard = \"введите номер карты состоящий из 8 цифр или выберите пункт недоступна\";\r\n\r\n    if (this.state.userList !== []) {\r\n      const stateJson = JSON.stringify(this.state.userList);\r\n      localStorage.setItem(\"userList\", stateJson);\r\n      const idJson = JSON.stringify(this.state.id);\r\n      localStorage.setItem(\"id\", idJson)\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <section className={\"section\"}>\r\n          <form action=\"#\" className={\"form\"}>\r\n            <input\r\n              placeholder={\"Имя\"}\r\n              className={`${\r\n                name === \"first\"\r\n                  ? \"firstInput\"\r\n                  : name === false\r\n                  ? \"notValid\"\r\n                  : \"firstInput\"\r\n              }`}\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              onChange={event => this.setData(event, \"name\")}\r\n            />\r\n            <div hidden={name} className={\"noValidInput\"}>\r\n              {noValidName}\r\n            </div>\r\n            <input\r\n              placeholder={\"Фамилия\"}\r\n              className={`${\r\n                secondName === \"first\"\r\n                  ? \"firstInput\"\r\n                  : secondName === false\r\n                  ? \"notValid\"\r\n                  : \"firstInput\"\r\n              }`}\r\n              type=\"text\"\r\n              value={this.state.secondName}\r\n              onChange={event => this.setData(event, \"secondName\")}\r\n            />\r\n            <div hidden={secondName} className={\"noValidInput\"}>\r\n              {noValidSecondName}\r\n            </div>\r\n            <div className={\"selectList\"}>\r\n              <label>\r\n                <p>Пол:</p>\r\n                <select\r\n                  value={this.state.sex}\r\n                  className={\"select\"}\r\n                  onChange={event => this.setData(event, \"sex\")}\r\n                >\r\n                  <option value=\"\" hidden={true}></option>\r\n                  <option value=\"мужской\">мужской</option>\r\n                  <option value=\"женский\">женский</option>\r\n                </select>\r\n                <div hidden={sex} className={\"noValidSex\"}>\r\n                  выберете ваш пол\r\n                </div>\r\n              </label>\r\n              <label>\r\n                <p>Программа лояльности:</p>\r\n                <select\r\n                  value={this.state.loyalty}\r\n                  className={\"select\"}\r\n                  onChange={event => this.setData(event, \"loyalty\")}\r\n                >\r\n                  <option value=\"unavailable\">недоступна</option>\r\n                  <option value=\"card\">пластиковая карта</option>\r\n                  <option value=\"mobilApp\">мобильное приложение</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n            <input\r\n              placeholder={\"Номер карты\"}\r\n              className={`${\r\n                card === \"first\"\r\n                  ? \"firstInput\"\r\n                  : card === false\r\n                  ? \"notValid\"\r\n                  : \"firstInput\"\r\n              }`}\r\n              onChange={event => this.setData(event, \"card\")}\r\n              type=\"text\"\r\n              hidden={this.state.loyalty !== \"card\"}\r\n            />\r\n            <div hidden={card} className={\"noValidInput\"}>\r\n              {noValidSecondCard}\r\n            </div>\r\n            <button\r\n              className={`button ${\r\n                this.state.formValid === true ? \"activeButton\" : \"\"\r\n              }`}\r\n              onClick={this.createNewUser}\r\n              disabled={!this.state.formValid}\r\n            >\r\n              Сохранить\r\n            </button>\r\n          </form>\r\n          <Phrase />\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormAdd;\r\n","import React from 'react';\r\n\r\nfunction ShowListUsers(list) {\r\n  const userList = JSON.parse(localStorage.getItem('userList')) || list.list;\r\n  return userList.map(user => {\r\n    return (\r\n      <tr className={\"tbody__tr\"} key={user.id}>\r\n        <td className={\"tbody__td\"}>{user.name}</td>\r\n        <td className={\"tbody__td\"}>{user.secondName}</td>\r\n        <td className={\"tbody__td\"}>{user.sex}</td>\r\n        <td className={\"tbody__td\"}>{user.loyalty}</td>\r\n        <td className={\"tbody__td\"}>{user.card}</td>\r\n        <td className={\"tbody__td\"}>{user.data}</td>\r\n      </tr>\r\n    );\r\n  })\r\n}\r\n\r\nexport default ShowListUsers;","import React from 'react';\r\nimport {BrowserRouter, Route, Switch, NavLink} from 'react-router-dom';\r\nimport FormAdd from '../FormAdd/FormAdd';\r\nimport ShowListUsers from '../ShowListUsers/ShowListUsers';\r\n\r\nclass Nav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userList: [],\r\n    };\r\n\r\n    this.addUsers = this.addUsers.bind(this);\r\n  }\r\n\r\n  addUsers = (userList) => {\r\n    this.setState({userList})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <header className={\"header\"}>\r\n          <nav className={\"nav\"}>\r\n            <ul className={\"navList\"}>\r\n              <li className={\"navList__item\"}>\r\n                <NavLink to=\"/test\" exact>Форма регистрации</NavLink>\r\n              </li>\r\n              <li className={\"navList__item\"}>\r\n                <NavLink to=\"/userList\">Список клиентов</NavLink>\r\n              </li>\r\n              <li className={\"navList__item\"}>\r\n                <NavLink to=\"/info\">Информация об авторе</NavLink>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n        <Switch>\r\n          <Route path=\"/test\" exact>\r\n            <FormAdd list={this.state.userList} func={this.addUsers} />\r\n          </Route>\r\n          <Route path=\"/userList\">\r\n            <section className={\"section\"}>\r\n              <table className={\"table\"}>\r\n                <thead>\r\n                  <tr className={\"table__tr\"}>\r\n                    <td className={\"table__td\"}>Имя</td>\r\n                    <td className={\"table__td\"}>Фамилия</td>\r\n                    <td className={\"table__td\"}>Пол</td>\r\n                    <td className={\"table__td\"}>Программа лояльности</td>\r\n                    <td className={\"table__td\"}>Номер карты</td>\r\n                    <td className={\"table__td\"}>Время</td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className={\"tbody\"}>\r\n                  <ShowListUsers list={this.state.userList} />\r\n                </tbody>\r\n              </table>\r\n            </section>\r\n          </Route>\r\n          <Route path=\"/info\">\r\n            <section className={\"section\"}>\r\n              <ol className=\"rounded\">\r\n                <li><a className={\"notActive\"} href=\"#\">Юрий Бобешко</a></li>\r\n                <li><a className={\"notActive\"} href=\"#\">HTML5/CSS3, SASS(SCSS), JavaScript(ES6), React</a></li>\r\n                <li><a href=\"https://docs.google.com/document/d/18CiDxH0iUpZMcwsidRFXRsAzjl2zMiRCdZVPw3aZyqY/edit\">Резюме</a></li>\r\n                <li><a href=\"https://github.com/YuraBobeshko\">Профиль github</a></li>\r\n                <li><a href=\"https://github.com/YuraBobeshko/test\">Репозиторий этой страницы</a></li>\r\n              </ol>\r\n            </section>\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport './styles/main.css';\r\nimport Nav from './components/Nav/Nav';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}